{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","frameSize","itemWidth","step","count","animationDuration","countChange","widthContainer","muvStep","disabledButtonNext","disabledButtonPrev","prevValue","length","muveNext","setMuveNext","useState","_jsxs","className","children","_jsx","style","width","concat","transform","transition","map","img","index","src","alt","height","type","disabled","onClick","muvPrevEmoticon","muv","muvNextEmoticon","App","React","Component","constructor","arguments","state","handleChange","event","this","setState","target","value","prevState","widthItem","stepChange","animationChange","render","action","htmlFor","min","max","name","onChange","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cef86525.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype CarouselProp = {\n  images: string[];\n  step: number\n  frameSize: number;\n  itemWidth: number;\n  count: number;\n  animationDuration:number;\n  countChange: (value: number) => void;\n};\n\nconst Carousel: React.FC<CarouselProp> = ({\n  images,\n  frameSize,\n  itemWidth,\n  step,\n  count,\n  animationDuration,\n  countChange,\n}) => {\n  const widthContainer = frameSize * itemWidth;\n  const muvStep = itemWidth * step;\n  let disabledButtonNext = false;\n  let disabledButtonPrev = false;\n  const prevValue = ((images.length - frameSize) - count);\n  const [muveNext, setMuveNext] = useState(0);\n\n  if (count <= 0) {\n    disabledButtonNext = true;\n  }\n\n  if (count === images.length - frameSize) {\n    disabledButtonPrev = true;\n  }\n\n  const muvNextEmoticon = () => {\n    let muv = 0;\n\n    if (count <= 0) {\n      return;\n    }\n\n    if (count < step) {\n      setMuveNext(muveNext + itemWidth * count);\n      countChange(0);\n    } else {\n      if (muveNext === 0) {\n        muv += muvStep;\n        countChange(count - step);\n      } else {\n        muv += muveNext + muvStep;\n        countChange(count - step);\n      }\n\n      setMuveNext(muv);\n    }\n  };\n\n  const muvPrevEmoticon = () => {\n    let muv = 0;\n\n    if (count < images.length - count) {\n      muv = muveNext - muvStep;\n      countChange(count + step);\n\n      if (muveNext > 0) {\n        setMuveNext(muv);\n      }\n    } else {\n      setMuveNext(0);\n      countChange(count + prevValue);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__container\"\n        style={{\n          width: `${widthContainer}px`,\n        }}\n      >\n        <ul\n          style={{\n            transform: `translateX(-${muveNext}px)`,\n            transition: `all ${animationDuration}ms`,\n          }}\n          className=\"Carousel__list\"\n        >\n          {\n            images.map((img: string, index: number) => (\n              <li\n                className=\"Carousel__item\"\n                key={img}\n              >\n                <img\n                  className=\"Carousel__img\"\n                  src={img}\n                  alt={`${index + 1}`}\n                  style={{\n                    width: `${itemWidth}px`,\n                    height: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n      <div className=\"Carousel__wraper\">\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          disabled={disabledButtonPrev}\n          onClick={() => muvPrevEmoticon()}\n        >\n          Prev\n        </button>\n\n        <button\n          className=\"Carousel__button\"\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={() => muvNextEmoticon()}\n          disabled={disabledButtonNext}\n        >\n          Next\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number,\n  itemWidth: number,\n  count: number,\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    count: 7,\n    animationDuration: 1000,\n  };\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      frameSize: +event.target.value,\n    });\n    this.setState(prevState => ({\n      count: prevState.count - prevState.images.length,\n    }));\n  }\n\n  widthItem(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ itemWidth: +event.target.value });\n  }\n\n  stepChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ step: +event.target.value });\n  }\n\n  animationChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ animationDuration: +event.target.value });\n  }\n\n  countChange(value: number) {\n    this.setState({ count: value });\n  }\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      count,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form className=\"App__form\" action=\"/\">\n          <label htmlFor=\"item\">\n            Number of images\n\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={frameSize}\n              min={3}\n              max={10}\n              name=\"input1\"\n              onChange={(event) => this.handleChange(event)}\n            />\n          </label>\n\n          <label htmlFor=\"item2\">\n            Item Width\n\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={itemWidth}\n              name=\"input2\"\n              onChange={(event) => this.widthItem(event)}\n            />\n          </label>\n\n          <label htmlFor=\"item\">\n            Number of images scrolled\n\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={9}\n              name=\"input1\"\n              onChange={(event) => this.stepChange(event)}\n            />\n          </label>\n\n          <label htmlFor=\"item\">\n            Animation Duration\n\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={animationDuration}\n              name=\"input1\"\n              onChange={(event) => this.animationChange(event)}\n            />\n          </label>\n        </form>\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          step={step}\n          count={count}\n          animationDuration={animationDuration}\n          countChange={(value) => this.countChange(value)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}