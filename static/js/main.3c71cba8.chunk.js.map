{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","frameSize","itemWidth","step","animationDuration","widthContainer","disabledButtonNext","disabledButtonPrev","maxLength","length","currentIndex","setCurrentIndex","useState","_jsxs","className","children","_jsx","style","width","concat","transform","transition","map","img","index","src","alt","height","type","disabled","onClick","moveBack","prevIndex","Math","max","moveForward","min","App","carouselSettings","setCarouselSettings","count","action","htmlFor","value","name","onChange","event","prevState","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c71cba8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype CarouselProp = {\n  images: string[];\n  step: number\n  frameSize: number;\n  itemWidth: number;\n  animationDuration:number;\n};\n\nconst Carousel: React.FC<CarouselProp> = ({\n  images,\n  frameSize,\n  itemWidth,\n  step,\n  animationDuration,\n}) => {\n  const widthContainer = frameSize * itemWidth;\n  let disabledButtonNext = false;\n  let disabledButtonPrev = false;\n  const maxLength = images.length - step;\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  if (currentIndex === images.length - step) {\n    disabledButtonNext = true;\n  }\n\n  if (currentIndex === 0) {\n    disabledButtonPrev = true;\n  }\n\n  const moveBack = () => (\n    currentIndex !== 0\n      ? setCurrentIndex(prevIndex => Math.max(prevIndex - step, 0))\n      : setCurrentIndex(maxLength)\n  );\n  const moveForward = () => (\n    currentIndex !== maxLength\n      ? setCurrentIndex(prevIndex => Math.min(prevIndex + step, maxLength))\n      : setCurrentIndex(0)\n  );\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__container\"\n        style={{\n          width: `${widthContainer}px`,\n        }}\n      >\n        <ul\n          style={{\n            transform: `translateX(-${(currentIndex * itemWidth)}px)`,\n            transition: `all ${animationDuration}ms`,\n          }}\n          className=\"Carousel__list\"\n        >\n          {\n            images.map((img: string, index: number) => (\n              <li\n                className=\"Carousel__item\"\n                key={img}\n              >\n                <img\n                  className=\"Carousel__img\"\n                  src={img}\n                  alt={`${index + 1}`}\n                  style={{\n                    width: `${itemWidth}px`,\n                    height: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n      <div className=\"Carousel__wraper\">\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          disabled={disabledButtonPrev}\n          onClick={moveBack}\n        >\n          Prev\n        </button>\n\n        <button\n          className=\"Carousel__button\"\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={moveForward}\n          disabled={disabledButtonNext}\n        >\n          Next\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nexport const App: React.FC = () => {\n  const [carouselSettings, setCarouselSettings] = useState({\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    count: 7,\n    animationDuration: 1000,\n  });\n\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n  const {\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n  } = carouselSettings;\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n      <form className=\"App__form\" action=\"/\">\n        <label htmlFor=\"NumberImages\">\n          Number of images\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            value={frameSize}\n            min={3}\n            max={10}\n            name=\"NumberImages\"\n            onChange={(event) => setCarouselSettings(prevState => ({\n              ...prevState,\n              frameSize: +event.target.value,\n              count: (images.length - step) - images.length - prevState.count,\n            }))}\n          />\n        </label>\n        <label htmlFor=\"iteamWidth\">\n          Item Width\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            value={itemWidth}\n            name=\"iteamWidth\"\n            onChange={(event) => setCarouselSettings(prevState => ({\n              ...prevState,\n              itemWidth: +event.target.value,\n            }))}\n          />\n        </label>\n\n        <label htmlFor=\"imagesScrolled\">\n          Number of images scrolled\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            value={step}\n            min={1}\n            max={9}\n            name=\"imagesScrolled\"\n            onChange={(event) => setCarouselSettings(prevState => ({\n              ...prevState,\n              step: +event.target.value,\n            }))}\n          />\n        </label>\n\n        <label htmlFor=\"animationDuration\">\n          Animation Duration\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            value={animationDuration}\n            name=\"animationDuration\"\n            onChange={(event) => setCarouselSettings(prevState => ({\n              ...prevState,\n              animationDuration: +event.target.value,\n            }))}\n          />\n        </label>\n      </form>\n      <Carousel\n        images={images}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        step={step}\n        animationDuration={animationDuration}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}